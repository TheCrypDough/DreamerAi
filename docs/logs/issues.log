# DreamerAI Issues Log

This log tracks non-critical issues, bugs, suggestions, and areas for improvement identified during development or testing.

**Format:** `[YYYY-MM-DD HH:MM:SS] - Issue Identified/Updated/Resolved: [Description] - Task: [Guide Day X Task Name] - Status: [New/Investigating/Blocked/Resolved] - Fix: [Brief Fix Summary, if Resolved]`

---
*(Log entries start here)*

[2025-04-15 01:25:00] - Issue Resolved: Python dependencies required manual installation, Task: Day 2 Environment & Dependencies, Fix: User downgraded Python from 3.13 to 3.11, installed Rust build tools, and ran `pip install -r requirements.txt` successfully.
[2025-04-15 02:25:00] - Issue Identified: Pydantic V2 initialization complexity, Task: Day 3 - Implement BaseAgent, Status: Investigating, Details: Multiple attempts needed (init vs model_post_init vs computed_field) to handle non-field attribute `agent_chat_dir` correctly with linters.
[2025-04-15 02:25:01] - Issue Resolved: Pydantic V2 initialization complexity, Task: Day 3 - Implement BaseAgent, Fix: Used `Field(init=False)` for `agent_chat_dir` and assigned value in `model_post_init`.
[2025-04-15 02:25:02] - Issue Identified: `git add` failed for `rules_check.log`, Task: Day 3 - Stage/Commit/Push, Status: Investigating, Details: File ignored by `.gitignore` despite negation attempts.
[2025-04-15 02:25:03] - Issue Resolved: `git add` failed for `rules_check.log`, Task: Day 3 - Stage/Commit/Push, Fix: Used `git add -f` to force staging.
[2025-04-15 02:25:04] - Issue Identified: `git commit` unreliable via tool, Task: Day 3 - Stage/Commit/Push, Status: Mitigated, Details: Commit command failed with piping, succeeded without but gave noisy output/exit code 1.
[2025-04-15 02:25:05] - Issue Resolved: `git commit` unreliable via tool, Task: Day 3 - Stage/Commit/Push, Fix: Confirmed commit succeeded via successful `git push`.
[2024-07-26 17:02:00] - Issue Identified: Failed to apply edit_file to docs/cursorrules.md, Task: Day 4 Auto-Update Workflow, Status: Mitigated, Details: Attempt to update Memory Bank/Current Task failed, reapply duplicated file content. Skipping docs/cursorrules.md update, attempting mirror file update.
[Timestamp Placeholder] - Issue Resolved: Guide/State Mismatch for server.py. Task: Day 5 - Modify C:\DreamerAI\engine\core\server.py. Status: Resolved. Fix: Guide said Modify, but file didn't exist. Created file instead using guide code.
[Timestamp Placeholder] - Issue Identified: Linter errors after implementing DreamerDB. Task: Day 5 - Implement the DreamerDB class in db.py. Status: Investigating. Details: Initial linter errors related to logger import path. Attempted fix by changing `from .logger` to `from engine.core.logger`.
[Timestamp Placeholder] - Issue Resolved: Linter errors after implementing DreamerDB. Task: Day 5 - Implement the DreamerDB class in db.py. Status: Resolved. Fix: Changed logger import path to `from engine.core.logger import logger_instance as logger`.
[Timestamp Placeholder] - Issue Updated: Verification Partially Failed - dreamer.db not created. Task: Day 5 - Verify frontend/backend connection and DB creation. Status: Investigating. Details: Backend connection via fetch was successful, but the data/db directory is empty. DB file not created on server start/db module import.
[Timestamp Placeholder] - Issue Resolved: Verification Partially Failed - dreamer.db not created. Task: Day 5 - Verify frontend/backend connection and DB creation. Status: Resolved. Fix: Running `python -m engine.core.db` manually successfully created the main dreamer.db file. The initial failure was likely due to the server process not fully initializing the db_instance on startup (potentially related to the terminal command interruption).
[Timestamp Placeholder] - Issue Identified: Linter errors in engine/ai/llm.py. Task: Day 6 - Populate engine/ai/llm.py. Status: Investigating. Details: Errors include missing stubs (requests, openai), conditional function signature mismatch (fallback log_rules_check), and potential incorrect type assumption leading to decode error on cached_bytes.
[Timestamp Placeholder] - Issue Resolved: LLM Providers Disabled. Task: Day 6 - Execute llm.py test block (Retry 2). Status: Resolved. Fix: Added 'enabled = true' to ollama and cloud_tier1 sections in config.dev.toml.
[Timestamp Placeholder] - Issue Identified: LLM Cache Test Failed. Task: Day 6 - Execute llm.py test block (Retry 3). Status: Mitigated (Expected). Details: Cache test failed verification check because Redis is not running (cache disabled) and/or generative results differed between runs.
[2024-07-27 17:00:00] - Issue Identified: llm.py failed test execution. Reason: Multiple errors including config loading, asyncio misuse, typos. Status: Investigating. Task: Day 6 - Execute llm.py test block.
[2024-07-27 17:05:00] - Issue Resolved: NameError: name 'toml' is not defined, Task: Day 6 - Execute llm.py test block, Fix: Corrected usage to 'tomllib'.
[2024-07-27 17:10:00] - Issue Resolved: Incorrect config structure access, Task: Day 6 - Execute llm.py test block, Fix: Updated llm.py to access providers under `config['ai']['providers']`.
[2024-07-27 17:20:00] - Issue Resolved: OPENROUTER_API_KEY environment variable not loaded, Task: Day 6 - Execute llm.py test block, Fix: Added `override=True` to `load_dotenv()` call and improved logging.
[2024-07-27 17:30:00] - Issue Resolved: llm.py test block failures, Task: Day 6 - Execute llm.py test block, Fix: Addressed multiple issues including config loading, API key access, asyncio errors, and typos. Verified successful execution and API call.
[2024-07-27 19:43:00] - Issue Identified: Task 'Day 8 Task 5 (Test ChefJeff V1)' - Details: `ChefJeff.run` failed to query RAG because `query_rag` method is not available in the current BaseAgent (from Day 3). Status: Known Limitation (Requires BaseAgent V2/Day 72 features). Resolution: Proceeding, Jeff handles missing RAG context gracefully.
[2024-07-27 19:43:00] - Issue Identified: Task 'Day 8 Task 3/5 (Implement/Test ChefJeff V1)' - Details: Temporarily commented out `event_manager` import/usage and `send_update_to_ui` calls in `main_chat.py` due to dependencies on future modules (Day 62, Day 13). Status: Known Limitation. Resolution: Proceeding with core Jeff logic; full integration pending future days.
[2024-07-12 16:46:37] - Issue Resolved: Linter errors in engine/agents/planning.py (dummy class syntax, unicode escape), Task: Day 11 Task 1 - PlanningAgent Class Structure, Fix: Corrected dummy class definitions (BaseAgent init, LLM async def -> def) and fixed backslashes in docstring example path.
[2024-07-12 16:59:00] - Issue Identified: ValueError: \"PlanningAgent\" object has no field \"llm\". Task: Day 11 Task 5 - Execute main.py. Status: Resolved. Fix: Modified BaseAgent to include `_llm = PrivateAttr(default=None)` and updated PlanningAgent to use `self._llm`.
[2024-07-12 17:18:00] - Issue Identified: LLM provider 'cloud_tier1' (OpenRouter) failed with 404. Task: Day 12 Task 7 - Execute main.py. Status: Mitigated. Fix: Fallback to Ollama provider successful for code generation.
[2025-04-16 23:45:00] - Issue Identified: Intermittent TypeError: 'NoneType' object is not subscriptable when processing OpenRouter response in llm.py _generate_openai_compatible - Task: Day 13 Test Flow - Status: New - Details: Occurred for Jeff and Arch runs, but not Dudley/Lamar. Suggests inconsistent response structure from OpenRouter or error in response parsing logic (completion.choices[0].message.content). Requires investigation in llm.py.
[2024-08-12 11:35:00] - Issue Identified: BaseAgent lacks ChromaDB/lightrag integration. Task: Day 15 Seeding Nexus RAG DB. Details: The current engine/agents/base.py does not contain the expected RAG logic (query_rag, ChromaDB init) referenced in Jeff V1/Day 8 context. Requires manual seeding script using lightrag/chromadb. Status: Implementing manual seed script.
[2024-08-12 12:05:00] - Issue Identified: BaseAgent V2 RAG implementation missing. Task: Pre-Day 15 Refactor. Status: New. Details: engine/agents/base.py code context does not include ChromaDB/ST integration planned for Day 72, blocking Jeff V1/Nexus V1 RAG and future agents.
[2024-08-12 13:00:00] - Issue Identified: BaseAgent V2 RAG implementation missing/corrupted. Task: Day 15 Prerequisite Refactor. Status: New. Details: engine/agents/base.py does not contain functional ChromaDB/ST RAG logic as expected by Day 8+ guide entries. Current implementation causes AttributeError for missing query_rag/send_update_to_ui and RAG errors. Applying Day 72 BaseAgent V2 code now.
[2025-04-17 23:27:06] - Issue Identified: OpenRouter TypeError: 'NoneType' object is not subscriptable, Task: Day 16 Task 3 (Test Run 2), Details: LLM call from Arch agent to OpenRouter model (google/gemini-2.5-pro-exp-03-25:free) failed with TypeError. Flow continued via Ollama fallback. Related to #20250416234500. Status: Investigating (Recurring).
[2025-04-18 01:45:00] - Issue Identified: Jeff V2 n8n handoff verification cannot be completed yet. Task: Day 18 Hermie V1 Structure & Jeff Handoff Verification (Original Guide Task). Reason: Required n8n workflow and potentially updated Jeff V2 logic for handoff trigger/confirmation are not yet implemented. Status: Open. Action: Logged issue, deferred verification to later date when prerequisites are met.
[2025-04-18 02:00:00] - Issue Identified: DB Pool functions missing. Task: Day 18 Hermie V1 Placeholder Test (Corrected Scope). Reason: `initialize_db_pool` and `close_db_pool` not found in `engine.core.db` during `main.py` test execution. Status: Mitigated/Open. Action: Handled via `try/except ImportError` in `main.py` for Day 18 test. Requires proper implementation later (PostgreSQL target: Day 100).
[2025-04-18 02:00:00] - INFO: OpenRouter API Intermittent TypeError. Task: Ongoing. Reason: Logs occasionally show `TypeError: AIOR_Handler.__init__() missing 1 required positional argument: 'loop'`. Status: Monitoring. Action: Continue monitoring logs, investigate further if error becomes blocking or more frequent.
[2025-04-18 02:48:00] - INFO: Checked for BaseAgent V2 Alignment Rule (Proposed Rule 2A). Task: Verify Rule Existence. Status: Complete. Details: Verified that the existing section 'Strategy for Adapting Guide Code (Days 16-71) to BaseAgent V2 (MANDATORY POST-DAY 15)' in cursorrules.md already covers the required context and adaptation instructions. No changes made.
[2025-04-18 01:40:00] - DEBUG: Adapted Day 18 guide code (Hermie V1 Test) to use BaseAgent V2 async methods and structure.
[2025-04-18 02:04:00] - INFO: Corrected Day 18 scope based on user clarification. Implemented and tested Hermie V1 placeholder structure only. Associated RAG DB seed script executed successfully after initial ValueError fix.
[2025-04-18 15:14:00] - INFO: Issue Resolved: `TypeError: ChefJeff.__init__() missing 1 required positional argument: 'user_dir'`, Task: Day 19 - Task 5 Execute Test, Fix: Added `user_dir` argument back to all agent instantiations in `main.py`.
[2025-04-18 15:15:00] - INFO: Issue Resolved: `ValueError: "HermieAgent" object has no field "agents"`, Task: Day 19 - Task 5 Execute Test, Fix: Added `agents: Dict[str, BaseAgent]` field definition back to `HermieAgent` class in `communications.py`.
[2025-04-18 15:16:00] - INFO: Issue Resolved: `pydantic_core._pydantic_core.ValidationError: ... agents Field required ...`, Task: Day 19 - Task 5 Execute Test, Fix: Marked `agents` field as `Optional` in `HermieAgent` class definition in `communications.py` to satisfy Pydantic validation during super init.
[AUTO_TIMESTAMP] - Issue Resolved: Electron Content Security Policy (CSP) incorrect for API calls, Task: Day 21 Task 4: Start Backend Server, Fix: Updated 'connect-src' in app/forge.config.js to allow http://localhost:8090.
[AUTO_TIMESTAMP] - Issue Resolved: WebSocket connection refused (403 Forbidden then 1006/Blank Screen), Task: Day 21 Task 4: Start Backend Server, Fix: Corrected backend import error by creating engine/core/dream_theatre_service.py; reverted problematic CSP change in app/main.js and corrected CSP in app/forge.config.js.
[AUTO_TIMESTAMP] - Issue Identified: Dream Theatre WebSocket messages missed when tab is inactive. Task: Day 21 Task 7: Test WebSocket Broadcast. Status: Known Limitation. Details: Broadcast works, but frontend disconnects WebSocket on tab switch due to component lifecycle. Refactoring planned for later date per guide.
[AUTO_TIMESTAMP] - INFO: WebSocket broadcast mechanism test successful. Task: Day 21 Task 7: Test WebSocket Broadcast. Status: Complete. Details: Broadcast JSON appeared in Dream Theatre panel when tab was active.
[2025-04-19 16:00:00] - Issue Identified: Persistent linter error 'Module has no attribute "getLogger"' on line 12/13 of engine/core/project_manager.py after applying try/except block for logger import. Task: Day 23 Task 2 (Context). Reason: Linter likely confused about standard 'logging' module context, despite code being functionally correct for runtime via server.py. Status: Investigating / Linter Config Review Needed. Halting further fix attempts on this file per rules.
[2025-04-19 16:30:00] - Issue Identified: Terminal output truncated/corrupted for Python scripts. Task: Day 23 Task 5 Verification (Context). Reason: `run_terminal_cmd` consistently fails to capture full stdout from Python scripts (`db.py` actions, `verify_project_1.py`). Piping to `| cat` leads to truncation/errors; running without `| cat` triggers tool errors/no output. Status: Blocking. Action: Requires investigation of `run_terminal_cmd` tool behavior with PowerShell/Python. Manual script execution may be needed as temporary workaround.
[2025-04-19 17:00:00] - Issue Resolved: AttributeError: module 'logging' has no attribute 'getLogger'. Task: Day 23 Task 5 (Context). Status: Resolved. Fix: User identified and deleted a rogue, empty `logging.py` file within the project structure that was conflicting with the standard library module.
[2025-04-19 17:05:00] - Issue Identified: Lewis test failed with "AttributeError: 'str' object has no attribute 'get'". Task: Day 24 Task 5 (Execute main.py). Reason: Likely issue in `list_tools_by_category` or underlying tool cache format/parsing in `administrator.py`. Status: Investigating (Deferred). Action: Focus on Day 24 VC task first.
[AUTO_TIMESTAMP] - INFO: Redundant file engine/agents/lewis.py identified and deleted. Correct LewisAgent code confirmed to be in engine/agents/administrator.py. Imports checked (main.py was correct). Task: N/A (Corrective Action). Fix: Deleted engine/agents/lewis.py.
[AUTO_TIMESTAMP] - Issue Identified: AttributeError: 'VersionControl' object has no attribute 'init_repo'. Task: Day 24 Task 5 (Execute main.py). Status: New. Details: The test block in main.py incorrectly called vc.init_repo() instead of the correct vc.initialize_repository() method.
[AUTO_TIMESTAMP] - Issue Resolved: AttributeError: 'VersionControl' object has no attribute 'init_repo'. Task: Day 24 Task 5 (Execute main.py). Status: Resolved. Fix: Corrected the method call in main.py to vc.initialize_repository().
[AUTO_TIMESTAMP] - Issue Identified: AttributeError: 'VersionControl' object has no attribute 'stage_all_changes'. Task: Day 24 Task 5 (Execute main.py - Run 2). Status: New. Details: The test block in main.py incorrectly called vc.stage_all_changes() instead of the correct vc.stage_changes() method.
[AUTO_TIMESTAMP] - Issue Resolved: AttributeError: 'VersionControl' object has no attribute 'stage_all_changes'. Task: Day 24 Task 5 (Execute main.py - Run 2). Status: Resolved. Fix: Corrected the method call in main.py to vc.stage_changes().
[2025-04-19 18:21:29] - Issue Resolved: Intermittent TypeError: 'NoneType' object is not subscriptable in llm.py _generate_openai_compatible - Task: Day 24 (Context - Proactive Fix) - Status: Resolved - Fix: Added checks for completion, choices, message, and content attributes before accessing response_text to handle potential None values or unexpected response structures.
[2025-04-19 18:58:00] - INFO: Issue Resolved: VersionControl stage_changes/commit_changes methods missing return value. Task: Day 24 Task 5 (Test local VC ops). Status: Resolved. Fix: Added `return True` to end of try blocks in `stage_changes` and `commit_changes` methods in engine/core/version_control.py.
[AUTO_TIMESTAMP] - Issue Identified: Electron Forge/Webpack build failing to find/load preload.js at expected path '.webpack\renderer\main_window\preload.js'. Task: Day 26 Task 6 Test. Status: Investigating.
[AUTO_TIMESTAMP] - Issue Updated: Electron Forge/Webpack preload.js load failure. Status: CLOSED/REVERTED. Fix: Reverted codebase to commit 5a13ddb via git reset --hard. The code changes leading to this state were discarded.
[2025-04-25 13:00:00] - Issue Identified: GitHub OAuth flow using electron-oauth2 fails with ERR_CONNECTION_REFUSED. Task: Day 26 (Implicit Debugging). Status: Investigating. Details: Library fails to start/bind its internal loopback server on http://localhost.
[2025-04-25 13:05:00] - INFO: Switched GitHub OAuth strategy to custom protocol (dreamerai://) and external browser launch. Task: Day 26 (Implicit Debugging).
[2025-04-25 13:15:00] - Issue Identified: GitHub OAuth page shows 'redirect_uri is not associated with this application'. Task: Day 26 (Implicit Debugging). Status: Resolved. Fix: User manually updated Callback URL in GitHub App settings from 'http://localhost' to 'dreamerai://oauth/github/callback'.
[2025-04-25 13:20:00] - Issue Identified: Electron app fails to start (ReferenceError: Cannot access 'createWindow' before initialization). Task: Day 26 (Implicit Debugging). Status: Resolved. Fix: Moved createWindow function definition earlier in main.js, before single-instance-lock logic that used it.
[2025-04-25 13:25:00] - Issue Identified: GitHub OAuth fails with 'Server configuration error: Missing GitHub Client ID'. Task: Day 26 (Implicit Debugging). Status: Resolved. Fix: Corrected dotenv path resolution in main.js using `app.getAppPath()` and `path.resolve(..., '..', ...)`. Added logging confirming .env load.
[2025-04-25 13:30:00] - Issue Identified: Windows shows 'Error launching app / Unable to find Electron app at C:\WINDOWS\system32\...' when handling dreamerai:// redirect. Task: Day 26 (Implicit Debugging). Status: Blocked (Dev Env). Details: Custom protocol handler registration via `setAsDefaultProtocolClient` unreliable during `npm start`. OS cannot find running dev instance.
[2025-04-25 13:40:00] - INFO: Reverted OAuth strategy back to electron-oauth2 library with http://localhost redirect due to custom protocol handler issues in dev environment. Task: Day 26 (Implicit Debugging).
[2025-04-25 13:45:00] - Issue Identified: Electron app fails to start (Blank white screen). Task: Day 26 (Implicit Debugging). Status: Resolved. Fix: Added missing `app.on('ready', createWindow)` call back to main.js after incorrect removal during revert.
[2025-04-25 13:50:00] - Issue Identified: GitHub OAuth flow using electron-oauth2 fails again with ERR_CONNECTION_REFUSED after fixing startup. Task: Day 26 (Implicit Debugging). Status: Blocked. Details: Confirms the original issue with the library's loopback server persists. Root cause likely within electron-oauth2 or its interaction with the dev environment.
[2025-04-25 14:00:00] - INFO: Codebase state reset to HEAD commit via `git reset --hard HEAD` per user instruction due to persistent OAuth issues and deviation from stable state. Task: Day 26 (Implicit Debugging).
